@model IEnumerable<TransitusWeb.Models.PurchaseOrderViewModel>

@{
    ViewData["Title"] = "Purchase Orders";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>Purchase Orders for @ViewBag.VendorName</h1>
        <a asp-action="Create" asp-route-vendorId="@ViewBag.VendorId" class="btn btn-primary">Create New</a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Purchase Orders</h5>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.PONumber)</th>
                                <th>@Html.DisplayNameFor(model => model.OrderDate)</th>
                                <th>@Html.DisplayNameFor(model => model.ExpectedDeliveryDate)</th>
                                <th>@Html.DisplayNameFor(model => model.Status)</th>
                                <th>@Html.DisplayNameFor(model => model.TotalAmount)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.PONumber)</td>
                                    <td>@item.OrderDate.ToShortDateString()</td>
                                    <td>@(item.ExpectedDeliveryDate.HasValue ? item.ExpectedDeliveryDate.Value.ToShortDateString() : "-")</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(item.Status)">@item.Status</span>
                                    </td>
                                    <td>@item.TotalAmount.ToString("C")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.PurchaseOrderId" class="btn btn-sm btn-info">Details</a>
                                            <a asp-action="Edit" asp-route-id="@item.PurchaseOrderId" class="btn btn-sm btn-primary">Edit</a>
                                            <a asp-action="Delete" asp-route-id="@item.PurchaseOrderId" class="btn btn-sm btn-danger">Delete</a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    No purchase orders found for this vendor.
                </div>
            }
        </div>
    </div>

    <div class="mt-3">
        <a asp-controller="Vendor" asp-action="Details" asp-route-id="@ViewBag.VendorId" class="btn btn-secondary">Back to Vendor</a>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "draft" => "bg-secondary",
            "pending" => "bg-warning text-dark",
            "approved" => "bg-success",
            "rejected" => "bg-danger",
            "completed" => "bg-info",
            "cancelled" => "bg-dark",
            _ => "bg-secondary"
        };
    }
} 