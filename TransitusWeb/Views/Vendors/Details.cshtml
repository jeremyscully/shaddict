@model TransitusWeb.Models.VendorViewModel

@{
    ViewData["Title"] = "Vendor Details";
}

<div class="container mt-4">
    <h1>Vendor Details</h1>

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">@Model.Name</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.VendorId)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.VendorId)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Name)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Name)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.ContactPerson)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.ContactPerson)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Email)</dt>
                        <dd class="col-sm-8">
                            <a href="mailto:@Model.Email">@Html.DisplayFor(model => model.Email)</a>
                        </dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Phone)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Phone)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Address)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Address)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.TaxId)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.TaxId)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.IsActive)</dt>
                        <dd class="col-sm-8">
                            @if (Model.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Inactive</span>
                            }
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <dl class="row">
                        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Notes)</dt>
                        <dd class="col-sm-10">@Html.DisplayFor(model => model.Notes)</dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a asp-action="Edit" asp-route-id="@Model.VendorId" class="btn btn-primary">Edit</a>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            <a asp-action="Delete" asp-route-id="@Model.VendorId" class="btn btn-danger">Delete</a>
        </div>
    </div>

    <!-- Purchase Orders Section -->
    <div class="card mb-4">
        <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Purchase Orders</h5>
            <a asp-controller="PurchaseOrders" asp-action="Create" asp-route-vendorId="@Model.VendorId" class="btn btn-sm btn-light">Create New</a>
        </div>
        <div class="card-body">
            @if (Model.PurchaseOrders != null && Model.PurchaseOrders.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>PO Number</th>
                                <th>Order Date</th>
                                <th>Expected Delivery</th>
                                <th>Status</th>
                                <th>Total Amount</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var po in Model.PurchaseOrders)
                            {
                                <tr>
                                    <td>@po.PONumber</td>
                                    <td>@po.OrderDate.ToShortDateString()</td>
                                    <td>@(po.ExpectedDeliveryDate.HasValue ? po.ExpectedDeliveryDate.Value.ToShortDateString() : "-")</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(po.Status)">@po.Status</span>
                                    </td>
                                    <td>@po.TotalAmount.ToString("C")</td>
                                    <td>
                                        <div class="btn-group">
                                            <a asp-controller="PurchaseOrders" asp-action="Details" asp-route-id="@po.PurchaseOrderId" class="btn btn-sm btn-primary">Details</a>
                                            <a asp-controller="PurchaseOrders" asp-action="Edit" asp-route-id="@po.PurchaseOrderId" class="btn btn-sm btn-secondary">Edit</a>
                                            <button class="btn btn-sm btn-info" type="button" data-bs-toggle="collapse" 
                                                    data-bs-target="#invoices-@po.PurchaseOrderId" aria-expanded="false">
                                                Invoices
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="6" class="p-0">
                                        <div class="collapse" id="invoices-@po.PurchaseOrderId">
                                            <div class="card card-body m-2">
                                                <h6>Invoices for PO: @po.PONumber</h6>
                                                @if (po.Invoices != null && po.Invoices.Any())
                                                {
                                                    <table class="table table-sm">
                                                        <thead>
                                                            <tr>
                                                                <th>Invoice #</th>
                                                                <th>Date</th>
                                                                <th>Due Date</th>
                                                                <th>Amount</th>
                                                                <th>Paid</th>
                                                                <th>Status</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var invoice in po.Invoices)
                                                            {
                                                                <tr class="@(invoice.IsOverdue ? "table-danger" : "")">
                                                                    <td>@invoice.InvoiceNumber</td>
                                                                    <td>@invoice.InvoiceDate.ToShortDateString()</td>
                                                                    <td>@invoice.DueDate.ToShortDateString()</td>
                                                                    <td>@invoice.TotalAmount.ToString("C")</td>
                                                                    <td>@invoice.PaidAmount.ToString("C")</td>
                                                                    <td>
                                                                        <span class="badge @GetInvoiceStatusBadgeClass(invoice.Status)">
                                                                            @invoice.Status
                                                                        </span>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                }
                                                else
                                                {
                                                    <p class="text-muted">No invoices found for this purchase order.</p>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-muted">No purchase orders found for this vendor.</p>
                <a asp-controller="PurchaseOrders" asp-action="Index" asp-route-vendorId="@Model.VendorId" class="btn btn-primary">View All Purchase Orders</a>
            }
        </div>
        <div class="card-footer">
            <a asp-controller="PurchaseOrders" asp-action="Index" asp-route-vendorId="@Model.VendorId" class="btn btn-primary">View All Purchase Orders</a>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "completed" => "bg-success",
            "in progress" => "bg-primary",
            "pending" => "bg-warning",
            "cancelled" => "bg-danger",
            "received" => "bg-info",
            _ => "bg-secondary"
        };
    }

    string GetInvoiceStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "paid" => "bg-success",
            "pending" => "bg-warning",
            "overdue" => "bg-danger",
            "partially paid" => "bg-info",
            _ => "bg-secondary"
        };
    }
} 